[tool.poetry]
name = "configparser"
version = "2.1.0"
description = ""
authors = ["Чичко Александра Алексеевна <tiredsosha@gmail.com>"]
license = "Proprietary"
classifiers = [
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Aiohttp",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Other Audience",
    "License :: Other/Proprietary License",
    "Natural Language :: Russian",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only"
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.8.2"
pyaml = "^21.8.3"


[tool.poetry.dev-dependencies]
isort = "^5.9.3"
black = "^21.7b0"
pre-commit = "^2.14.0"
pytest = "^6.2.4"

[tool.black]
line_length = 120
multi_line_output = 3
length_sort = true
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -s -vv"
testpaths = [
    "tests",
    "test_*",
    "tests_*",
    "*_test",
    "*_tests"
]
python_files = [
    "tests.py",
    "test_*.py",
    "tests_*.py",
    "*_test.py",
    "*_tests.py"
]


[tool.poetry.scripts]
vr = "configparser.main:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
